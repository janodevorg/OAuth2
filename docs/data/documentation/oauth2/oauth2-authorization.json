{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"But first, what we saw in the previous sections was actually the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"authorization flow with code grant"}]},{"type":"text","text":"."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"strong","inlineContent":[{"type":"text","text":"authorization flow"}]},{"type":"text","text":" is an interaction that authenticates (verifies identity), and based on"},{"type":"text","text":" "},{"type":"text","text":"that identity authorizes (grants access) to protected resources."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"strong","inlineContent":[{"type":"text","text":"grant"}]},{"type":"text","text":" is something that the server agrees to give in response to a request. In OAuth2 there"},{"type":"text","text":" "},{"type":"text","text":"are four grant types: authorization code, implicit, resource owner password credentials, and"},{"type":"text","text":" "},{"type":"text","text":"client credentials."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We’ll focus on the code grant flow because it is the most secure and preferred. The others are"},{"type":"text","text":" "},{"type":"text","text":"thought for scenarios where there are several levels of trust between the agents involved."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here are the steps:"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"oauth2-authorization.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Before we go further, let’s agree on some terms:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Protected resource"}]},{"type":"text","text":". Confidential information of an user. e.g. his Twitter timeline."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Resource server"}]},{"type":"text","text":". A server that hosts "},{"type":"emphasis","inlineContent":[{"type":"text","text":"protected resources"}]},{"type":"text","text":". e.g. Twitter.com."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"User"}]},{"type":"text","text":". A human user with an account registered in a resource server."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Client"}]},{"type":"text","text":". An application that the user is trying to access his protected resources"},{"type":"text","text":" "},{"type":"text","text":"with. e.g. a Twitter client app on his phone."}]}]}]},{"anchor":"1.-Client-requests-an-authorization-code","level":2,"type":"heading","text":"1. Client requests an authorization code"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The client redirects the user to the resource server. In a phone, the authentication can also"},{"type":"text","text":" "},{"type":"text","text":"happen launching a native app of the company that owns the resource server. That is, instead"},{"type":"text","text":" "},{"type":"text","text":"redirecting to Twitter.com, the user could launch the Twitter native application (assuming it is"},{"type":"text","text":" "},{"type":"text","text":"installed). In both cases the URL is almost the same, only the protocol is different."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is an example that launches the Twitter.com website:"}]},{"type":"codeListing","syntax":null,"code":["https:\/\/twitter.com\/authorize","?response_type=code","&client_id=CLIENT_ID","&redirect_uri=REDIRECT_URI","&scope=email","&state=1234zyx","&code_challenge=XXXXXXX","&code_challenge_method=S256"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"where"}]},{"type":"table","rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Parameter"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Meaning"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"response_type"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"code"},{"type":"text","text":" means we request an authorization code."}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"client_id"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Identifier granted by the server during client registration."}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"redirect_uri"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"The URI to return the user to when authorization is successful."}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"scope"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"email"},{"type":"text","text":" is the protected resource we request access to."}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"state"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"A random string generated by the client."}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"code_challenge"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Base64-encoded version of the sha256 hash of a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"code verifier string"}]},{"type":"text","text":", which is a random string that the app stores locally."}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"code_challenge_method"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"S256"},{"type":"text","text":" indicates sha256 as the hashing method."}]}]]],"header":"row"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The website (or app) of the resource server prompts the user to grant access to the client"},{"type":"text","text":" "},{"type":"text","text":"application."}]},{"anchor":"2.-Return-authorization-code","level":2,"type":"heading","text":"2. Return authorization code"},{"type":"paragraph","inlineContent":[{"type":"text","text":"After the user agrees to authorize the client app at the resource server, the server"},{"type":"text","text":" "},{"type":"text","text":"sends a custom URL similar to this:"}]},{"type":"codeListing","syntax":null,"code":["twitClient:\/\/authorize","?code=AUTHORIZATION_CODE","&state=1234zyx"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This custom URL launches the client application. The client app checks that the state matches the"},{"type":"text","text":" "},{"type":"text","text":"one used in his original request."}]},{"anchor":"3.-Trade-authorization-code-for-access-token","level":2,"type":"heading","text":"3. Trade authorization code for access token"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The client app trades the authorization code for an access token. This trade is called "},{"type":"emphasis","inlineContent":[{"type":"text","text":"token"},{"type":"text","text":" "},{"type":"text","text":"exchange"}]},{"type":"text","text":", and it’s a POST request similar to this:"}]},{"type":"codeListing","syntax":null,"code":["POST https:\/\/api.authorization-server.com\/token","?grant_type=authorization_code","&code=AUTH_CODE_HERE","&redirect_uri=REDIRECT_URI","&client_id=CLIENT_ID","&code_verifier=VERIFIER_STRING"]},{"type":"table","rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Parameter"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Description"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"grant_type"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"The grant type authorization_code."}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"code"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"The authorization code received in the previous call."}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"redirect_uri"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"It must be identical to the redirect_uri you sent in the authentication call."}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"client_id"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"The ID received during registration."}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"code_verifier"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"The plaintext used to create the code_challenge (not the code challenge itself) in the authorization call."}]}]]],"header":"row"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the server supports PKE (every modern server does) it will hash the value of the "},{"type":"codeVoice","code":"code_verifier"},{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"and confirm that the hashed value matches the value of the "},{"type":"codeVoice","code":"code_challenge"},{"type":"text","text":" sent in the first"},{"type":"text","text":" "},{"type":"text","text":"request."}]},{"anchor":"4.-Return-an-access-token","level":2,"type":"heading","text":"4. Return an access token"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is a string sent to the client in the response of the POST request, usually as a JSON"},{"type":"text","text":" "},{"type":"text","text":"document. The format is arbitrary."}]},{"type":"codeListing","syntax":null,"code":["{","  \"access_token\":\"dKrouXGDK9xrcNUcUTbZ\",","  \"expires_in\":3600,","  \"refresh_token\":\"xM3twXjo2obKo4EkuNtF\"","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example, the response includes"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The access token itself."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An expiration time for the access token."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A refresh token."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The refresh token can be sent to an endpoint to obtain an access token with a renewed expiration"},{"type":"text","text":" "},{"type":"text","text":"time. All this is optional. The server may issue a permanent token instead, or force you to repeat"},{"type":"text","text":" "},{"type":"text","text":"the authorization flow."}]},{"anchor":"5.-Access-protected-resources","level":2,"type":"heading","text":"5. Access protected resources"},{"type":"paragraph","inlineContent":[{"type":"text","text":"At this point you can access protected resources at the resource server. Each call should have a"},{"type":"text","text":" "},{"type":"text","text":"header "},{"type":"codeVoice","code":"Auhorization: Bearer ACCESS_TOKEN"},{"type":"text","text":". For instance:"}]},{"type":"codeListing","syntax":null,"code":["curl -H \"Authorization: Bearer RsT5OjbzRn430zqMLgV3Ia\" \\","https:\/\/api.authorization-server.com\/1\/me"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"strong","inlineContent":[{"type":"text","text":"bearer token"}]},{"type":"text","text":" is a type of access token whereby simple possession of the token values"},{"type":"text","text":" "},{"type":"text","text":"provides access to protected resources. No additional information, such as a cryptographic key,"},{"type":"text","text":" "},{"type":"text","text":"is needed to make API calls."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The bearer could also be set as a query parameter or a Form-encoded body parameter, but that’s"},{"type":"text","text":" "},{"type":"text","text":"rare. Header is preferred because is not usually logged or cached."}]},{"anchor":"RFC6749","level":2,"type":"heading","text":"RFC6749"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you fancy reading this again with the RFC on the side, here are the relevant sections for each"},{"type":"text","text":" "},{"type":"text","text":"step."}]},{"type":"table","rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Step"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"RFC section"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"1. Client requests an authorization code"}]}],[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc6749#section-4.1.1"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"2. Server returns an authorization code"}]}],[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc6749#section-4.1.2"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"–"}]}],[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc6749#section-4.1.2.1"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"3. Client trades authorization code for access token"}]}],[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc6749#section-4.1.3"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"4. Server returns access token"}]}],[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc6749#section-4.1.4"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"5. Client access protected resources"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"–"}]}]]],"header":"row"}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/oauth2\/oauth2-authorization"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/OAuth2\/documentation\/OAuth2\/OAuth2-Authorization","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Same authentication flow with real network calls."}],"kind":"article","metadata":{"roleHeading":"Article","title":"OAuth2 Authorization","role":"article","modules":[{"name":"OAuth2"}]},"hierarchy":{"paths":[["doc:\/\/OAuth2\/documentation\/OAuth2"]]},"seeAlsoSections":[{"title":"Understanding OAuth2","identifiers":["doc:\/\/OAuth2\/documentation\/OAuth2\/OAuth2-Authorization-overview"],"generated":true}],"references":{"https://datatracker.ietf.org/doc/html/rfc6749#section-4.1.1":{"title":"4.1.1 Authorization Request","titleInlineContent":[{"type":"text","text":"4.1.1 Authorization Request"}],"type":"link","identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc6749#section-4.1.1","url":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc6749#section-4.1.1"},"doc://OAuth2/documentation/OAuth2/OAuth2-Authorization-overview":{"role":"article","title":"OAuth2 Authorization Overview","abstract":[{"type":"text","text":"A walk through a sample OAuth2 authorization flow."}],"identifier":"doc:\/\/OAuth2\/documentation\/OAuth2\/OAuth2-Authorization-overview","kind":"article","type":"topic","url":"\/documentation\/oauth2\/oauth2-authorization-overview"},"https://datatracker.ietf.org/doc/html/rfc6749#section-4.1.4":{"title":"4.1.4. Access Token Response","titleInlineContent":[{"type":"text","text":"4.1.4. Access Token Response"}],"type":"link","identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc6749#section-4.1.4","url":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc6749#section-4.1.4"},"https://datatracker.ietf.org/doc/html/rfc6749#section-4.1.3":{"title":"4.1.3. Access Token Request","titleInlineContent":[{"type":"text","text":"4.1.3. Access Token Request"}],"type":"link","identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc6749#section-4.1.3","url":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc6749#section-4.1.3"},"https://datatracker.ietf.org/doc/html/rfc6749#section-4.1.2":{"title":"4.1.2. Authorization Response","titleInlineContent":[{"type":"text","text":"4.1.2. Authorization Response"}],"type":"link","identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc6749#section-4.1.2","url":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc6749#section-4.1.2"},"doc://OAuth2/documentation/OAuth2":{"role":"collection","title":"OAuth2","abstract":[{"type":"text","text":"An OAuth2 client to authenticate your app with a service provider."}],"identifier":"doc:\/\/OAuth2\/documentation\/OAuth2","kind":"symbol","type":"topic","url":"\/documentation\/oauth2"},"oauth2-authorization.png":{"alt":"Overview","type":"image","identifier":"oauth2-authorization.png","variants":[{"url":"\/images\/oauth2-authorization.png","traits":["1x","light"]}]},"https://datatracker.ietf.org/doc/html/rfc6749#section-4.1.2.1":{"title":"4.1.2.1. Error Response","titleInlineContent":[{"type":"text","text":"4.1.2.1. Error Response"}],"type":"link","identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc6749#section-4.1.2.1","url":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc6749#section-4.1.2.1"}}}